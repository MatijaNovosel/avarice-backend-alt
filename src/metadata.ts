/* eslint-disable */
export default async () => {
    const t = {
        ["./users/models/user.model"]: await import("./users/models/user.model"),
        ["./transactions/dto/post-order.input"]: await import("./transactions/dto/post-order.input")
    };
    return { "@nestjs/swagger/plugin": { "models": [], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { type: String }, "getHelloName": { type: String } } }]] }, "@nestjs/graphql/plugin": { "models": [[import("./common/models/base.model"), { "BaseModel": { id: {}, createdAt: {}, updatedAt: {} } }], [import("./transactions/models/transaction.model"), { "Transaction": { description: {}, amount: {}, longitude: {}, latitude: {}, account: { nullable: true }, transferAccount: { nullable: true }, category: { nullable: true } } }], [import("./categories/models/category.model"), { "Category": { name: {}, color: {}, icon: {}, system: {}, user: { nullable: true }, parent: { nullable: true }, transactions: { nullable: true }, templates: { nullable: true }, children: { nullable: true } } }], [import("./templates/models/template.model"), { "Template": { description: {}, amount: {}, longitude: {}, latitude: {}, account: { nullable: true }, category: { nullable: true } } }], [import("./accounts/models/account.model"), { "Account": { name: {}, initialBalance: {}, currency: {}, user: { nullable: true }, transactions: { nullable: true }, transferTransactions: { nullable: true }, templates: {} } }], [import("./users/models/user.model"), { "User": { email: {}, firstName: { nullable: true }, lastName: { nullable: true }, username: {}, role: {}, transactions: { nullable: true }, accounts: { nullable: true }, categories: { nullable: true } } }], [import("./accounts/models/accountBalance.model"), { "AccountBalanceModel": { balance: {}, id: {}, name: {}, currency: {} } }], [import("./auth/dto/signup.input"), { "SignupInput": { username: {}, email: {}, password: {}, firstname: { nullable: true }, lastname: { nullable: true } } }], [import("./auth/models/token.model"), { "Token": { accessToken: {}, refreshToken: {} } }], [import("./auth/dto/login.input"), { "LoginInput": { email: {}, password: {} } }], [import("./auth/dto/refresh-token.input"), { "RefreshTokenInput": { token: {} } }], [import("./auth/models/auth.model"), { "Auth": { user: { type: () => t["./users/models/user.model"].User } } }], [import("./common/pagination/pagination.args"), { "PaginationArgs": { skip: { nullable: true, type: () => Number }, after: { nullable: true, type: () => String }, before: { nullable: true, type: () => String }, first: { nullable: true, type: () => Number }, last: { nullable: true, type: () => Number } } }], [import("./transactions/args/transaction-id.args"), { "TransactionIdArgs": { transactionId: { type: () => String } } }], [import("./transactions/dto/createTransaction.input"), { "CreateTransactionInput": { description: {}, amount: {}, latitude: {}, longitude: {}, accountId: {}, categoryId: {} } }], [import("./transactions/dto/post-order.input"), { "PostOrder": { field: { type: () => t["./transactions/dto/post-order.input"].PostOrderField } } }], [import("./common/pagination/page-info.model"), { "PageInfo": { endCursor: { nullable: true }, hasNextPage: {}, hasPreviousPage: {}, startCursor: { nullable: true } } }], [import("./transactions/models/transaction-connection.model"), { "TransactionConnection": {} }], [import("./users/dto/change-password.input"), { "ChangePasswordInput": { oldPassword: {}, newPassword: {} } }], [import("./users/dto/update-user.input"), { "UpdateUserInput": { firstname: { nullable: true }, lastname: { nullable: true } } }], [import("./transactions/args/user-id.args"), { "UserIdArgs": { userId: { type: () => String } } }]] } };
};